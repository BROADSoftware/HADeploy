
{{% if src.kafka_topics is defined and  src.kafka_topics|length > 0 %}}

- hosts: {{{ src.kafka_relay.host }}}
  any_errors_fatal: {{{ src.exit_on_fail }}}
  tasks:

{{% if src.kafka_relay.kerberos %}}
  - name: Perform kinit for Kafka access
    shell: kinit -kt {{{ src.kafka_relay.relay_keytab_path }}} {{{ src.kafka_relay.principal }}}
    changed_when: false
{{% if src.kafka_relay.kdebug %}} 
  - name: Check kerberos ticket for Kafka access
    shell: klist
    register: klist_result
    changed_when: false
  - debug: var=klist_result
{{%endif%}}
{{%endif%}}

  - name: "kafka_topic: Create a temporary file name"
    shell: mktemp
    register: mktemp
    changed_when: false

  - name: "kafka_topic: Generate the description file"
    template: src=desc_topics.yml.j2 dest={{mktemp.stdout}} mode=0644
    changed_when: false

  - name: "kafka_topic: Apply potential update"
    shell: "{{{ src.kafka_relay.tools_folder}}}/jdctopic/jdctopic --inputFile {{mktemp.stdout}}"
    register: jdct
{{% if src.kafka_relay.become_user is defined %}}
    become: true
    become_user: "{{{src.kafka_relay.become_user}}}"
{{% if src.kafka_relay.become_method is defined %}}
    become_method: "{{{src.kafka_relay.become_method}}}"
{{%endif%}}
{{%endif%}}
    changed_when: jdct.stdout.find(" 0 modification(s)") == -1

  - name: "kafka_topic: Cleanup temporary file"
    file: path={{mktemp.stdout}} state=absent
    changed_when: false

{{% if src.kafka_relay.kerberos %}}
  - name: Perform kdestroy for Kafka access
    shell: kdestroy
    changed_when: false
{{%endif%}}
    
    
{{% endif %}}  
  