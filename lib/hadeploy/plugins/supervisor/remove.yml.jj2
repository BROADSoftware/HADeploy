

# ------------------------------------------------------------------------------ Handle supervisor_programs stuff

{{% for scopeName, scope in data.supervisors.scopeByName.iteritems() %}}
{{% if scope.programs is defined and scope.programs|length > 0 and scope.programToRemoveCount > 0 %}}
- hosts: {{{ scopeName }}}
  any_errors_fatal: {{{ src.exit_on_fail }}}
  tasks:
  
  - name: Remove supervisors program configuration files
    file: path={{item}} state=absent
    with_items:
{{% for prg in scope.programs %}}
{{% if not prg.no_remove %}}
    - {{{ prg.conf_file_src_j2}}}
{{% endif %}}     
{{% endfor %}}


{{% endif %}}      

{{% endfor %}}



# ------------------------------------------------------------------------------ Handle supervisor stuff
{{% for scopeName, scope in data.supervisors.scopeByName.iteritems() %}}
{{% if scope.supervisors is defined and scope.supervisors|length > 0 and scope.supervisorToRemoveCount > 0 %}}
- hosts: {{{ scopeName }}}
  any_errors_fatal: {{{ src.exit_on_fail }}}
  tasks:
  # ------------------------ Halt supervisor_xxxx services
  - name: Stop supervisors_xxxx service(s)
    systemd: name=supervisord_{{item}}.service state=stopped enabled=false
    failed_when: false
    with_items:
{{% for s in scope.supervisors %}}
{{% if not s.no_remove %}}
    - {{{ s.name }}}
{{% endif %}}     
{{% endfor %}}

  - name: Remove file "/usr/lib/systemd/system/supervisord_xxxxx.service"
    file: path=/usr/lib/systemd/system/supervisord_{{item}}.service state=absent 
    with_items:
{{% for s in scope.supervisors %}}
{{% if not s.no_remove %}}
    - {{{ s.name }}}
{{% endif %}}     
{{% endfor %}}
    notify: 
    - reload service file


  
  # ----------------- Remove supervisor_xxxx files and folders
  - name: Remove Supervisor files and folders
    file: state=absent path={{item}} 
    with_items:
{{% for s in scope.supervisors %}}
{{% if not s.no_remove %}}
    - {{{s.conf_file_dst}}}
    - {{{s.supervisorctl}}}
    - {{{s.logs_dir}}}     
    - {{{s.pid_dir}}}     
    - {{{s.socks_dir}}}     
    - {{{s.include_dir}}}
{{% endif %}}     
{{% endfor %}}
  
  handlers:
  - name: reload service file
    command: "systemctl daemon-reload"
  
  
{{%endif%}}
{{% endfor %}}


