
type: map
mapping:

     
  "hdfs_ranger_policies":
    type: seq
    sequence:
    - type: map
      mapping:
        "name": { type: str, required: true }
        "paths": { type: seq, sequence: [ { type: str } ], required: true }
        "recursive": { type: bool, required: false }    # Default to True
        "audit": { type: bool, required: false }    # Default to True
        "enabled": { type: bool, required: false }    # Default to True
        "no_remove": { type: bool, required: false }    # Default to false
        "when": { type: bool, required: false }    # Default to true
        "permissions": 
          type: seq
          sequence:
          - type: map
            mapping:
              "users": { type: seq, sequence: [ { type: str } ] }
              "groups": { type: seq, sequence: [ { type: str } ] }
              "accesses": { type: seq, sequence: [ { type: str, enum: [ 'read', 'write', 'execute' ] } ], required: true }
              "delegate_admin": { type: bool, required: false }    # Default to False
        
        
        
  "folders":
    type: "seq"
    sequence:
    - type: map
      mapping:
        "ranger_policy":
          type: map
          mapping:
            "name": { type: str, required: false }
            "recursive": { type: bool, required: false }    # Default to True
            "audit": { type: bool, required: false }    # Default to True
            "enabled": { type: bool, required: false }    # Default to True
            "permissions": 
              type: seq
              sequence:
              - type: map
                mapping:
                  "users": { type: seq, sequence: [ { type: str } ] }
                  "groups": { type: seq, sequence: [ { type: str } ] }
                  "accesses": { type: seq, sequence: [ { type: str, enum: [ 'read', 'write', 'execute' ] } ], required: true }
                  "delegate_admin": { type: bool, required: false }    # Default to False
          
        

# For src attribute
#http://
#https://
#file://
#tmpl://
#<node>:///

# <node>:// src apply only on scope=hdfs. And path must be absolute 

# file and node handle file patern matching  (?, *) 

        
  "files":        
    type: "seq"
    sequence:
    - type: map
      mapping:
        "ranger_policy":
          type: map
          mapping:
            "name": { type: str, required: false }
            "recursive": { type: bool, required: false }    # Default to False
            "audit": { type: bool, required: false }    # Default to True
            "enabled": { type: bool, required: false }    # Default to True
            "permissions": 
              type: seq
              sequence:
              - type: map
                mapping:
                  "users": { type: seq, sequence: [ { type: str } ] }
                  "groups": { type: seq, sequence: [ { type: str } ] }
                  "accesses": { type: seq, sequence: [ { type: str, enum: [ 'read', 'write', 'execute' ] } ], required: true }
                  "delegate_admin": { type: bool, required: false }    # Default to False
        

# For src attribute
#file://
#tmpl://
#<node>:///

# <node>:// src apply only on scope=hdfs. And path must be absolute 
        
  "trees":        
    type: "seq"
    sequence:
    - type: map
      mapping:
        "ranger_policy":
          type: map
          mapping:
            "name": { type: str, required: false }
            "recursive": { type: bool, required: false }    # Default to True
            "audit": { type: bool, required: false }    # Default to True
            "enabled": { type: bool, required: false }    # Default to True
            "permissions": 
              type: seq
              sequence:
              - type: map
                mapping:
                  "users": { type: seq, sequence: [ { type: str } ] }
                  "groups": { type: seq, sequence: [ { type: str } ] }
                  "accesses": { type: seq, sequence: [ { type: str, enum: [ 'read', 'write', 'execute' ] } ], required: true }
                  "delegate_admin": { type: bool, required: false }    # Default to False
        
