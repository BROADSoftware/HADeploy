


# ------------------------------------------------------------------------------ Handle systemd stuff

{{% for scopeName, scope in data.services.scopeByName.iteritems() %}}
{{% if scope.systemd is defined and scope.systemd|length > 0 %}}
- hosts: {{{ scopeName }}}
  any_errors_fatal: {{{ src.exit_on_fail }}}
  tasks:
{{% for unit in scope.systemd %}}
{{% if not unit.no_remove %}}
  - name: stop {{{unit.name}}} service
    systemd: name={{{ unit.name }}}.service state=stopped enabled=false
    failed_when: false
  - name: Remove file '/usr/lib/systemd/system/{{{unit.name}}}.service'
    file: path=/usr/lib/systemd/system/{{{unit.name}}}.service state=absent 
    notify: 
    - reload service file
{{% endif %}}
{{% endfor %}}
  handlers:
  - name: reload service file
    command: "systemctl daemon-reload"
{{%endif%}}
{{% endfor %}}


# ------------------------------------------------------------------------------ Handle supervisor stuff
{{% for scopeName, scope in data.services.scopeByName.iteritems() %}}
{{% if scope.supervisors is defined and scope.supervisors|length > 0 and scope.supervisorToRemoveCount > 0 %}}
- hosts: {{{ scopeName }}}
  any_errors_fatal: {{{ src.exit_on_fail }}}
  tasks:
  # ------------------------ Halt supervisor_xxxx services
  - name: Stop supervisors_xxxx service(s)
    systemd: name=supervisord_{{item}}.service state=stopped enabled=false
    failed_when: false
    with_items:
{{% for s in scope.supervisors %}}
{{% if not s.no_remove %}}
    - {{{ s.name }}}
{{% endif %}}     
{{% endfor %}}

  - name: Remove file "/usr/lib/systemd/system/supervisord_xxxxx.service"
    file: path=/usr/lib/systemd/system/supervisord_{{item}}.service state=absent 
    with_items:
{{% for s in scope.supervisors %}}
{{% if not s.no_remove %}}
    - {{{ s.name }}}
{{% endif %}}     
{{% endfor %}}
    notify: 
    - reload service file


  
  # ----------------- Remove supervisor_xxxx files and folders
  - name: Remove Supervisor files and folders
    file: state=absent path={{item}} 
    with_items:
{{% for s in scope.supervisors %}}
{{% if not s.no_remove %}}
    - {{{s.conf_file_dst}}}
    - {{{s.supervisorctl}}}
    - {{{s.logs_dir}}}     
    - {{{s.pid_dir}}}     
    - {{{s.socks_dir}}}     
    - {{{s.include_dir}}}
{{% endif %}}     
{{% endfor %}}
  
  handlers:
  - name: reload service file
    command: "systemctl daemon-reload"
  
  
{{%endif%}}
{{% endfor %}}

