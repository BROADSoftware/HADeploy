


# ------------------------------------------------------------------------------ Handle systemd stuff
{{% if data.systemd is defined %}}

{{% for scopeName, scope in data.systemd.scopeByName.iteritems() %}}
- hosts: {{{ scopeName }}}
  any_errors_fatal: {{{ src.exit_on_fail }}}
  tasks:
{{% for unit in scope %}}
{{% if not unit.no_remove %}}
  - name: stop {{{unit.name}}} service
    systemd: name={{{ unit.name }}}.service state=stopped enabled=false
    failed_when: false
  - name: Remove file '/usr/lib/systemd/system/{{{unit.name}}}.service'
    file: path=/usr/lib/systemd/system/{{{unit.name}}}.service state=absent 
    notify: 
    - reload service file
{{% endif %}}
{{% endfor %}}
  handlers:
  - name: reload service file
    command: "systemctl daemon-reload"
{{% endfor %}}
{{% endif %}}


# ------------------------------------------------------------------------------ Handle supervisor stuff
{{% if data.supervisor is defined %}}
{{% for scopeName, scope in data.supervisor.scopeByName.iteritems() %}}
- hosts: {{{ scopeName }}}
  any_errors_fatal: {{{ src.exit_on_fail }}}
  tasks:
  # ----------------- Remove supervisor_xxxx folders
  - name: Remove Supervisor folders
    file: state=absent path={{item.path}} 
    with_items:
{{% for s in scope %}}
{{% if not s.no_remove %}}
    - { path: {{{s.logs_dir}}}, user: {{{s.user}}} }     
    - { path: {{{s.pid_dir}}}, user: {{{s.user}}} }     
    - { path: {{{s.socks_dir}}}, user: {{{s.user}}} }     
    - { path: {{{s.include_dir}}}, user: {{{s.user}}} }
{{% endif %}}     
{{% endfor %}}
    loop_control:
      label: "{{item.path}} user:{{item.user}}"
  
  
  # ----------------- Setup configuration file
  
  

{{% endfor %}}
{{% endif %}}

